{"version":3,"sources":["apps/Skills/list.tsx","apps/Skills/content.tsx"],"names":["skills","title","icon","CalculatorOutlined","items","name","HeartOutlined","LayoutOutlined","ApartmentOutlined","BugOutlined","DatabaseOutlined","SettingOutlined","ConsoleSqlOutlined","MergeCellsOutlined","ClearOutlined","SubMenu","Menu","SkillsAppContent","styles","useSpring","from","transform","opacity","to","delay","config","gentle","section","style","background","border","mode","parseList","list","result","item","push","map","skill","Item"],"mappings":"8OAuBaA,EAAuB,CAClC,CACEC,MAAO,6CACPC,KAAM,cAACC,EAAA,EAAD,IACNC,MAAO,CACL,CACEC,KAAM,cAER,CACEA,KAAM,cAER,CACEA,KAAM,QAER,CACEA,KAAM,OAER,CACEA,KAAM,QAER,CACEA,KAAM,SAIZ,CACEJ,MAAO,QACPC,KAAM,cAACI,EAAA,EAAD,IACNF,MAAO,CACL,CACEC,KAAM,eAER,CACEA,KAAM,gBAER,CACEA,KAAM,gBAER,CACEA,KAAM,WAER,CACEA,KAAM,oBAER,CACEJ,MAAO,kIACPC,KAAM,cAACK,EAAA,EAAD,IACNH,MAAO,CACL,CACEC,KAAM,eAER,CACEA,KAAM,kBAMhB,CACEJ,MAAO,QACPC,KAAM,cAACM,EAAA,EAAD,IACNJ,MAAO,CACL,CACEC,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,mBAIZ,CACEJ,MAAO,2EACPC,KAAM,cAACO,EAAA,EAAD,IACNL,MAAO,CACL,CACEC,KAAM,QAER,CACEA,KAAM,YAER,CACEA,KAAM,UAER,CACEA,KAAM,2BAIZ,CACEJ,MAAO,UACPC,KAAM,cAACQ,EAAA,EAAD,IACNN,MAAO,CACL,CACEH,MAAO,UACPC,KAAM,cAACS,EAAA,EAAD,IACNP,MAAO,CACL,CACEC,KAAM,WAER,CACEA,KAAM,YAIZ,CACEJ,MAAO,gEACPC,KAAM,cAACU,EAAA,EAAD,IACNR,MAAO,CACL,CACEC,KAAM,WAER,CACEA,KAAM,cAIZ,CACEA,KAAM,YAER,CACEA,KAAM,2BAIZ,CACEJ,MAAO,uCACPC,KAAM,cAACW,EAAA,EAAD,IACNT,MAAO,CACL,CACEC,KAAM,WAER,CACEA,KAAM,SAER,CACEA,KAAM,WAER,CACEJ,MAAO,aACPC,KAAM,cAACY,EAAA,EAAD,IACNV,MAAO,CACL,CACEC,KAAM,UAER,CACEA,KAAM,iB,gBCpKXU,EAAWC,IAAXD,QAyCQE,UAvCoB,WACjC,IAAMC,EAASC,oBAAU,CACvBC,KAAM,CACJC,UAAW,WACXC,QAAS,GAEXC,GAAI,CACFF,UAAW,YACXC,QAAS,GAEXE,MAAO,IACPC,OAAQA,SAAOC,SAmBjB,OACE,cAAC,WAASC,QAAV,CAAkBC,MAAOV,EAAzB,SACE,cAAC,IAAD,CAAMU,MAAO,CAACC,WAAY,OAAQC,OAAQ,QAASC,KAAK,SAAxD,SAlBc,SAAZC,EAAaC,GACjB,IADwC,EAClCC,EAA4B,GADM,cAErBD,GAFqB,IAExC,2BAAyB,CAAC,IAAfE,EAAc,QACvBD,EAAOE,KACL,cAACrB,EAAD,CAASb,KAAMiC,EAAKjC,KAAuBD,MAAOkC,EAAKlC,MAAvD,SACGkC,EAAK/B,MAAMiC,KAAI,SAAAC,GACd,MAAI,SAAUA,EACL,cAAC,IAAKC,KAAN,UAA6BD,EAAMjC,MAAnBiC,EAAMjC,MAExB2B,EAAU,CAACM,QALSH,EAAKlC,SAJA,8BAcxC,OAAOiC,EAKFF,CAAUhC","file":"static/js/11.7e105846.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CalculatorOutlined,\n  HeartOutlined,\n  ApartmentOutlined,\n  BugOutlined,\n  DatabaseOutlined,\n  MergeCellsOutlined,\n  LayoutOutlined,\n  ConsoleSqlOutlined,\n  SettingOutlined,\n  ClearOutlined,\n} from '@ant-design/icons'\n\nexport interface ISkillList {\n  icon: React.ReactNode\n  title: string\n  items: (IListItem | ISkillList)[]\n}\n\ninterface IListItem {\n  name: string\n}\nexport const skills: ISkillList[] = [\n  {\n    title: 'Базовые',\n    icon: <CalculatorOutlined />,\n    items: [\n      {\n        name: 'JavaScript',\n      },\n      {\n        name: 'TypeScript',\n      },\n      {\n        name: 'HTML',\n      },\n      {\n        name: 'CSS',\n      },\n      {\n        name: 'SASS',\n      },\n      {\n        name: 'Git',\n      },\n    ],\n  },\n  {\n    title: 'React',\n    icon: <HeartOutlined />,\n    items: [\n      {\n        name: 'React hooks',\n      },\n      {\n        name: 'React-router',\n      },\n      {\n        name: 'React Native',\n      },\n      {\n        name: 'Next.js',\n      },\n      {\n        name: 'GraphQL (Apollo)',\n      },\n      {\n        title: 'Библиотеки компонентов',\n        icon: <LayoutOutlined />,\n        items: [\n          {\n            name: 'Material UI',\n          },\n          {\n            name: 'Ant Design',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    title: 'Redux',\n    icon: <ApartmentOutlined />,\n    items: [\n      {\n        name: 'Redux-thunk',\n      },\n      {\n        name: 'Redux-saga',\n      },\n      {\n        name: 'Redux-toolkit',\n      },\n    ],\n  },\n  {\n    title: 'Тестирование',\n    icon: <BugOutlined />,\n    items: [\n      {\n        name: 'Jest',\n      },\n      {\n        name: 'Hermione',\n      },\n      {\n        name: 'Enzyme',\n      },\n      {\n        name: 'React-testing-library',\n      },\n    ],\n  },\n  {\n    title: 'Backend',\n    icon: <DatabaseOutlined />,\n    items: [\n      {\n        title: 'Node.js',\n        icon: <SettingOutlined />,\n        items: [\n          {\n            name: 'Express',\n          },\n          {\n            name: 'NestJS',\n          },\n        ],\n      },\n      {\n        title: 'Базы данных',\n        icon: <ConsoleSqlOutlined />,\n        items: [\n          {\n            name: 'MongoDB',\n          },\n          {\n            name: 'Firebase',\n          },\n        ],\n      },\n      {\n        name: 'REST API',\n      },\n      {\n        name: 'WebSocket (Socket.io)',\n      },\n    ],\n  },\n  {\n    title: 'Сборка',\n    icon: <MergeCellsOutlined />,\n    items: [\n      {\n        name: 'Webpack',\n      },\n      {\n        name: 'Babel',\n      },\n      {\n        name: 'PostCSS',\n      },\n      {\n        title: 'Code style',\n        icon: <ClearOutlined />,\n        items: [\n          {\n            name: 'ESlint',\n          },\n          {\n            name: 'Prettier',\n          },\n        ],\n      },\n    ],\n  },\n]\n","import React from 'react'\nimport {Menu} from 'antd'\nimport {ISkillList, skills} from './list'\n\nimport {config, useSpring} from '@react-spring/core'\nimport {animated} from '@react-spring/web'\n\nconst {SubMenu} = Menu\n\nconst SkillsAppContent: React.FC = () => {\n  const styles = useSpring({\n    from: {\n      transform: 'scale(0)',\n      opacity: 0,\n    },\n    to: {\n      transform: ' scale(1)',\n      opacity: 1,\n    },\n    delay: 300,\n    config: config.gentle,\n  })\n\n  const parseList = (list: ISkillList[]) => {\n    const result: React.ReactNode[] = []\n    for (const item of list) {\n      result.push(\n        <SubMenu icon={item.icon} key={item.title} title={item.title}>\n          {item.items.map(skill => {\n            if ('name' in skill) {\n              return <Menu.Item key={skill.name}>{skill.name}</Menu.Item>\n            }\n            return parseList([skill])\n          })}\n        </SubMenu>,\n      )\n    }\n    return result\n  }\n  return (\n    <animated.section style={styles}>\n      <Menu style={{background: 'none', border: 'none'}} mode=\"inline\">\n        {parseList(skills)}\n      </Menu>\n    </animated.section>\n  )\n}\n\nexport default SkillsAppContent\n"],"sourceRoot":""}