{"version":3,"sources":["redux/slices/common.ts","redux/slices/apps.ts","redux/sagas/root.ts","redux/store.ts","components/AppWindow/index.tsx","components/AppIcon/index.tsx","components/AppWindowErrorBoundary/index.tsx","components/DesktopFooter/index.tsx","hooks/useAnimation.tsx","assets/tg.svg","assets/gmail.svg","components/MenuComponent/MenuList/index.tsx","redux/hooks.ts","containers/MenuListContainer/index.tsx","components/MenuComponent/MenuWindow/index.tsx","components/MenuComponent/index.tsx","hooks/useOutsideClick.tsx","components/AppBar/AppBarIcon/index.tsx","components/AppBar/index.tsx","components/Loader/index.tsx","containers/AppBarContainer/index.tsx","containers/DesktopFooterContainer/index.tsx","containers/DesktopContainer/index.tsx","containers/App/index.tsx","apps/Resume/index.tsx","apps/Skills/index.tsx","apps/Portfolio/index.tsx","apps/Help/index.tsx","containers/Main.tsx","index.tsx"],"names":["common","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","apps","allApps","addApp","app","openApp","hidden","isOpen","closeApp","toggleApp","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","commonReducer","appsReducer","devTools","middleware","run","Header","Layout","Content","AppWindow","memo","children","style","onClose","onHide","className","props","handle","cancel","bounds","defaultClassName","defaultPosition","x","window","innerWidth","y","innerHeight","minWidth","minHeight","defaultSize","height","width","align","onClick","size","type","icon","CloseOutlined","LineOutlined","AppIcon","Title","Typography","AppWindowErrorBoundary","hasError","this","level","React","Component","Footer","DesktopFooter","menu","appBar","useState","time","setTime","date","setDate","useEffect","moment","interval","setInterval","clearInterval","onDateChange","useCallback","bordered","allowClear","onChange","useAnimation","startClassName","animationDuration","setIsOpen","closing","setClosing","onAnimationEnd","Object","assign","animationDirection","SubMenu","MenuLayout","Item","MenuList","onAppClick","defaultSelectedKeys","defaultOpenKeys","mode","title","map","GithubOutlined","fontSize","target","rel","href","src","TgIcon","FileTextFilled","Gmail","useAppDispatch","useDispatch","useAppSelector","useSelector","MenuListContainer","dispatch","useMemo","result","key","push","e","Sider","MenuWindow","Menu","isMenuOpen","setIsMenuOpen","AnimatedMenuWindow","onClickMenuButton","Wrapper","ref","useRef","checkIfClickedOutside","current","contains","document","addEventListener","removeEventListener","display","flexDirection","useOutsideClick","HomeTwoTone","AppBarIcon","AppBar","Loader","fallback","AppBarContainer","DesktopFooterContainer","Desktop","App","AnimatedAppWindow","onClickToggleButton","position","onClickAppIcon","onHideAppWindow","onDoubleClick","undefined","visibility","ResumeAppContent","lazy","ResumeApp","BookTwoTone","SkillsAppContent","SkillsApp","CodeTwoTone","PortfolioAppContent","PortfolioApp","FilePptTwoTone","HelpAppContent","HelpApp","QuestionCircleTwoTone","Main","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5c1e13f5.chunk.js","sourcesContent":["import {createSlice, PayloadAction} from '@reduxjs/toolkit'\n\nimport {RootState} from '../store'\n\ninterface CommonState {\n  value: number\n}\n\nconst initialState: CommonState = {\n  value: 0,\n}\n\nexport const common = createSlice({\n  name: 'common',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1\n    },\n    decrement: state => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload\n    },\n  },\n})\n\nexport const {increment, decrement, incrementByAmount} = common.actions\n\nexport const selectCount = (state: RootState) => state.common.value\n\nexport default common.reducer\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\n\nimport {RootState} from '../store'\nimport {App} from '../types'\n\ninterface AppsState {\n  allApps: {\n    [key: string]: App | undefined\n  }\n}\n\nconst initialState: AppsState = {\n  allApps: {},\n}\n\nexport const apps = createSlice({\n  name: 'apps',\n  initialState,\n  reducers: {\n    addApp: (state, action: PayloadAction<App>) => {\n      const app = action.payload\n      state.allApps[app.name] = app\n    },\n    openApp: (state, action: PayloadAction<string>) => {\n      const app = state.allApps?.[action.payload]\n      if (app) {\n        app.hidden = false\n        app.isOpen = true\n      }\n    },\n    closeApp: (state, action: PayloadAction<string>) => {\n      const app = state.allApps?.[action.payload]\n      if (app) {\n        app.isOpen = false\n      }\n    },\n    toggleApp: (state, action: PayloadAction<string>) => {\n      const app = state.allApps?.[action.payload]\n      if (app) {\n        app.hidden = !app.hidden\n      }\n    },\n  },\n})\n\nexport const {addApp, openApp, closeApp, toggleApp} = apps.actions\n\nexport const selectCount = (state: RootState) => state.common.value\n\nexport default apps.reducer\n","import {all} from 'redux-saga/effects'\n\nexport function* rootSaga() {\n  yield all([])\n}\n","import {configureStore} from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\n\nimport commonReducer from './slices/common'\nimport appsReducer from './slices/apps'\nimport {rootSaga} from './sagas/root'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport const store = configureStore({\n  reducer: {\n    common: commonReducer,\n    apps: appsReducer,\n  },\n  devTools: true,\n  middleware: [sagaMiddleware],\n})\n\nsagaMiddleware.run(rootSaga)\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = typeof store.dispatch\n","import React, {memo} from 'react'\nimport {Layout, Button, Space, LayoutProps} from 'antd'\nimport {Resizable} from 're-resizable'\nimport Draggable from 'react-draggable'\nimport {CloseOutlined, LineOutlined} from '@ant-design/icons'\n\nimport './app-window.scss'\n\nconst {Header, Content} = Layout\n\ninterface IAppWindow extends LayoutProps {\n  onClose?: () => void\n  onHide?: () => void\n  style?: React.CSSProperties\n}\n\nexport const AppWindow: React.FC<IAppWindow> = memo(\n  ({children, style, onClose, onHide, className, ...props}) => {\n    return (\n      <div style={style}>\n        <Draggable\n          handle=\".handle\"\n          cancel=\".non-draggable\"\n          bounds=\".desktop\"\n          defaultClassName=\"app-window\"\n          defaultPosition={{\n            x: window.innerWidth / 2 - 300,\n            y: window.innerHeight / 2 - 200,\n          }}>\n          <Resizable\n            minWidth=\"300\"\n            minHeight=\"300\"\n            defaultSize={{\n              height: 400,\n              width: 500,\n            }}>\n            <Layout\n              className={`app-window__layout ${className}`}\n              style={style}\n              {...props}>\n              <Header className=\"handle app-window__header\">\n                <Space align=\"center\">\n                  <Button\n                    className=\"non-draggable\"\n                    onClick={onClose}\n                    size=\"small\"\n                    type=\"primary\"\n                    icon={<CloseOutlined />}\n                  />\n                  <Button\n                    className=\"non-draggable\"\n                    onClick={onHide}\n                    size=\"small\"\n                    type=\"primary\"\n                    icon={<LineOutlined />}\n                  />\n                </Space>\n              </Header>\n              <Content className=\"app-window__content\">{children}</Content>\n            </Layout>\n          </Resizable>\n        </Draggable>\n      </div>\n    )\n  },\n)\n","import React, {memo} from 'react'\nimport Draggable, {ControlPosition} from 'react-draggable'\n\nimport './app-icon.scss'\n\ninterface IAppIcon extends React.HTMLAttributes<HTMLDivElement> {\n  defaultPosition?: ControlPosition\n  bounds?: string\n  name?: string\n}\n\nexport const AppIcon: React.FC<IAppIcon> = memo(\n  ({\n    children,\n    defaultPosition,\n    bounds = '.desktop-content',\n    name,\n    ...props\n  }) => {\n    return (\n      <Draggable\n        defaultPosition={defaultPosition}\n        handle=\".app-icon__handle\"\n        bounds={bounds}>\n        <div className=\"app-icon__handle\">\n          <div className=\"app-icon\" {...props}>\n            {children}\n          </div>\n          <span className=\"app-icon__name\">{name}</span>\n        </div>\n      </Draggable>\n    )\n  },\n)\n","import React from 'react'\nimport {Typography} from 'antd'\n\nimport './fallback.scss'\n\nconst {Title} = Typography\n\nexport class AppWindowErrorBoundary extends React.Component {\n  state: {hasError: boolean}\n  constructor(props: never) {\n    super(props)\n    this.state = {hasError: false}\n  }\n\n  static getDerivedStateFromError() {\n    return {hasError: true}\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"fallback\">\n          <Title level={2}>\n            Что-то пошло не так. <br /> Попробуйте перезагрузить страницу.\n          </Title>\n        </div>\n      )\n    }\n\n    return this.props.children\n  }\n}\n","import React, {memo, useCallback, useEffect, useState} from 'react'\nimport {Layout, Space, DatePicker, TimePicker, Divider} from 'antd'\nimport moment from 'moment'\n\nimport './desktop-footer.scss'\n\nconst {Footer} = Layout\n\ninterface IDesktopFooter {\n  menu: React.ReactNode\n  appBar: React.ReactNode\n}\n\nexport const DesktopFooter: React.FC<IDesktopFooter> = memo(\n  ({menu, appBar}) => {\n    const [time, setTime] = useState<moment.Moment>()\n    const [date, setDate] = useState<moment.Moment>()\n\n    useEffect(() => {\n      setTime(moment())\n      setDate(moment())\n      const interval = setInterval(() => {\n        setTime(moment())\n      }, 1000)\n      return () => {\n        clearInterval(interval)\n      }\n    }, [])\n\n    const onDateChange = useCallback(date => {\n      setDate(date)\n    }, [])\n\n    return (\n      <Footer className=\"desktop-footer\">\n        {menu}\n        <Divider type=\"vertical\" style={{height: 'auto'}} />\n        <Space align=\"start\" className=\"desktop-footer__bar\">\n          <Space>{appBar}</Space>\n          <Space>\n            <TimePicker bordered={false} allowClear={false} value={time} />\n            <DatePicker\n              onChange={onDateChange}\n              bordered={false}\n              allowClear={false}\n              value={date}\n            />\n          </Space>\n        </Space>\n      </Footer>\n    )\n  },\n)\n","import React, {useState} from 'react'\n\ninterface useAnimationTypes {\n  startClassName: string\n  animationDuration: number\n  isOpen?: boolean\n  setIsOpen: (value: boolean) => void\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Component: React.FC<any>\n}\n\nexport function useAnimation({\n  startClassName,\n  animationDuration,\n  isOpen,\n  setIsOpen,\n  Component,\n}: useAnimationTypes): [\n  React.FC<React.ComponentProps<typeof Component>>,\n  () => void,\n] {\n  const [closing, setClosing] = useState(true)\n\n  const onClick = () => {\n    setClosing(value => !value)\n    if (!isOpen) {\n      setIsOpen(true)\n    }\n  }\n  const handleAnimationEnd = () => {\n    if (isOpen && closing) {\n      setIsOpen(false)\n    }\n  }\n\n  const Animate: React.FC<React.ComponentProps<typeof Component>> = ({\n    children,\n    className,\n    onAnimationEnd,\n    style = {},\n    ...props\n  }) => (\n    <Component\n      className={`${className} ${startClassName}`}\n      onAnimationEnd={() => {\n        if (onAnimationEnd) {\n          onAnimationEnd()\n        }\n        handleAnimationEnd()\n      }}\n      style={Object.assign(style, {\n        animationDirection: closing ? 'alternate-reverse' : 'alternate',\n        animationDuration: animationDuration + 'ms',\n      })}\n      {...props}>\n      {children}\n    </Component>\n  )\n  return [Animate, onClick]\n}\n","export default __webpack_public_path__ + \"static/media/tg.28141391.svg\";","export default __webpack_public_path__ + \"static/media/gmail.9aa7d0bb.svg\";","import React from 'react'\n\nimport MenuLayout, {MenuItemProps} from 'antd/lib/menu'\nimport {App} from 'src/redux/types'\nimport {GithubOutlined, FileTextFilled} from '@ant-design/icons'\n\nimport TgIcon from 'src/assets/tg.svg'\nimport Gmail from 'src/assets/gmail.svg'\n\nconst {SubMenu, Item} = MenuLayout\n\ninterface IMenuList {\n  apps: App[] | undefined\n  onAppClick: MenuItemProps['onClick']\n}\n\nexport const MenuList: React.FC<IMenuList> = ({apps, onAppClick}) => {\n  return (\n    <MenuLayout\n      defaultSelectedKeys={['1']}\n      defaultOpenKeys={['sub1']}\n      mode=\"inline\">\n      <SubMenu key=\"sub1\" title=\"Apps\">\n        {apps?.map(app => (\n          <Item\n            onClick={onAppClick}\n            title={app.name}\n            icon={app.icon}\n            key={app.name}>\n            {app.name}\n          </Item>\n        ))}\n      </SubMenu>\n      <SubMenu key=\"sub2\" title=\"Contacts\">\n        <Item icon={<GithubOutlined style={{fontSize: '30px'}} />} key=\"github\">\n          <a\n            target=\"_blank\"\n            rel=\"nofollow noopener\"\n            href=\"https://github.com/MaksFenek\">\n            GitHub\n          </a>\n        </Item>\n        <Item icon={<img src={TgIcon} style={{height: 30}} />} key=\"tg\">\n          <a\n            target=\"_blank\"\n            href=\"https://t.me/m_fenek\"\n            rel=\"nofollow noopener\">\n            Telegram\n          </a>\n        </Item>\n        <Item icon={<FileTextFilled style={{fontSize: '30px'}} />} key=\"resume\">\n          <a\n            target=\"_blank\"\n            href=\"https://hh.ru/resume/1bb48cb7ff08c91eb20039ed1f3356576a3478\"\n            rel=\"nofollow noopener\">\n            Resume\n          </a>\n        </Item>\n        <Item icon={<img src={Gmail} style={{height: 30}} />} key=\"mail\">\n          <a\n            target=\"_blank\"\n            href=\"mailto:maksteonin@gmail.com\"\n            rel=\"nofollow noopener\">\n            Gmail\n          </a>\n        </Item>\n      </SubMenu>\n    </MenuLayout>\n  )\n}\n","import {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux'\nimport type {RootState, AppDispatch} from './store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import React, {useCallback, useMemo} from 'react'\nimport {MenuList} from 'src/components/MenuComponent/MenuList'\nimport {useAppDispatch, useAppSelector} from 'src/redux/hooks'\nimport {openApp} from 'src/redux/slices/apps'\n\nexport const MenuListContainer: React.FC = () => {\n  const state = useAppSelector(store => store.apps.allApps)\n  const dispatch = useAppDispatch()\n\n  const apps = useMemo(() => {\n    const result = []\n    if (state) {\n      for (const key in state) {\n        const app = state[key]\n        if (app) {\n          result.push(app)\n        }\n      }\n    }\n    return result\n  }, [state])\n\n  const onAppClick = useCallback(\n    e => {\n      dispatch(openApp(e.key))\n    },\n    [dispatch],\n  )\n\n  return <MenuList apps={apps} onAppClick={onAppClick} />\n}\n","import React from 'react'\nimport {Layout, LayoutProps} from 'antd'\n\nimport './menu-window.scss'\nimport {MenuListContainer} from 'src/containers/MenuListContainer'\n\nconst {Sider, Content} = Layout\n\nexport const MenuWindow: React.FC<LayoutProps> = ({\n  children,\n  className,\n  ...props\n}) => {\n  return (\n    <Layout className={`menu-window ${className}`} {...props}>\n      <Sider className=\"menu-window__sider\">\n        <MenuListContainer />\n      </Sider>\n      <Content className=\"menu-window__content\">{children}</Content>\n    </Layout>\n  )\n}\n","import React, {useState} from 'react'\nimport {Button} from 'antd'\nimport {HomeTwoTone} from '@ant-design/icons'\n\nimport {useAnimation, useOutsideClick} from 'src/hooks'\nimport {MenuWindow} from './MenuWindow'\n\nimport './menu.scss'\n\nexport const Menu: React.FC = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const [AnimatedMenuWindow, onClickMenuButton] = useAnimation({\n    isOpen: isMenuOpen,\n    setIsOpen: setIsMenuOpen,\n    startClassName: 'menu-opening',\n    animationDuration: 300,\n    Component: MenuWindow,\n  })\n\n  const onOutsideClick = () => {\n    if (isMenuOpen) {\n      onClickMenuButton()\n    }\n  }\n\n  const Wrapper = useOutsideClick(onOutsideClick)\n\n  return (\n    <Wrapper>\n      <Button\n        onClick={onClickMenuButton}\n        className=\"menu-button\"\n        size=\"middle\"\n        type=\"text\">\n        <HomeTwoTone style={{fontSize: '30px'}} />\n      </Button>\n      {isMenuOpen && <AnimatedMenuWindow />}\n    </Wrapper>\n  )\n}\n","import React, {useEffect, useRef} from 'react'\n\nexport const useOutsideClick = (setIsMenuOpen: () => void) => {\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const checkIfClickedOutside = (e: MouseEvent) => {\n      if (ref.current && !ref.current.contains(e.target as Document)) {\n        setIsMenuOpen()\n      }\n    }\n\n    document.addEventListener('mousedown', checkIfClickedOutside)\n\n    return () => {\n      document.removeEventListener('mousedown', checkIfClickedOutside)\n    }\n  }, [setIsMenuOpen])\n\n  const Wrapper: React.FC = ({children}) => (\n    <div\n      className=\"outside-click-wrapper\"\n      style={{display: 'inline-flex', flexDirection: 'column'}}\n      ref={ref}>\n      {children}\n    </div>\n  )\n\n  return Wrapper\n}\n","import React, {memo} from 'react'\nimport {Button, ButtonProps} from 'antd'\n\nimport './app-bar-icon.scss'\n\nexport const AppBarIcon: React.FC<ButtonProps> = memo(\n  ({children, ...props}) => {\n    return (\n      <Button className=\"app-bar-icon\" size=\"middle\" type=\"text\" {...props}>\n        {children}\n      </Button>\n    )\n  },\n)\n","import React, {memo} from 'react'\nimport {Space} from 'antd'\n\nimport {AppBarIcon} from './AppBarIcon'\nimport {App} from 'src/redux/types'\n\ninterface IAppBar {\n  apps: App[]\n  onClick: (name: string) => void\n}\n\nexport const AppBar: React.FC<IAppBar> = memo(({apps, onClick}) => {\n  return (\n    <Space>\n      {apps.map(app => (\n        <AppBarIcon key={app.name} onClick={() => onClick(app.name)}>\n          {app.icon}\n        </AppBarIcon>\n      ))}\n    </Space>\n  )\n})\n","import React, {Suspense} from 'react'\nimport {Spin} from 'antd'\n\nimport './loader.scss'\n\nexport const Loader: React.FC = ({children}) => {\n  return (\n    <Suspense\n      fallback={\n        <div className=\"loader\">\n          <Spin size=\"large\" />\n        </div>\n      }>\n      {children}\n    </Suspense>\n  )\n}\n","import React, {memo, useCallback} from 'react'\nimport {AppBar} from 'src/components'\nimport {useAppDispatch} from 'src/redux/hooks'\nimport {toggleApp} from 'src/redux/slices/apps'\nimport {App} from 'src/redux/types'\n\ninterface IAppBarContainer {\n  apps: App[]\n}\n\nexport const AppBarContainer: React.FC<IAppBarContainer> = memo(({apps}) => {\n  const dispatch = useAppDispatch()\n\n  const onAppClick = useCallback(\n    name => {\n      dispatch(toggleApp(name))\n    },\n    [dispatch],\n  )\n\n  return <AppBar apps={apps} onClick={onAppClick} />\n})\n","import React, {useMemo} from 'react'\n\nimport {DesktopFooter, Menu} from 'src/components'\nimport {useAppSelector} from 'src/redux/hooks'\nimport {App} from 'src/redux/types'\nimport {AppBarContainer} from '../AppBarContainer'\n\nexport const DesktopFooterContainer: React.FC = () => {\n  const state = useAppSelector(store => store.apps.allApps)\n\n  const apps = useMemo(() => {\n    const all: App[] = []\n    for (const key in state) {\n      const app = state[key]\n      if (app && app.isOpen) {\n        all.push(app)\n      }\n    }\n    return all\n  }, [state])\n\n  return (\n    <DesktopFooter menu={<Menu />} appBar={<AppBarContainer apps={apps} />} />\n  )\n}\n","import React from 'react'\nimport {Layout} from 'antd'\n\nimport {DesktopFooterContainer} from '../DesktopFooterContainer'\n\nimport './desktop.scss'\n\nconst {Content} = Layout\n\nexport const Desktop: React.FC = ({children}) => {\n  return (\n    <Layout className=\"desktop\">\n      <Content className=\"desktop-content\">{children}</Content>\n      <DesktopFooterContainer />\n    </Layout>\n  )\n}\n","import React, {memo, useCallback, useEffect} from 'react'\nimport {ControlPosition} from 'react-draggable'\n\nimport {\n  AppIcon,\n  AppWindow,\n  AppWindowErrorBoundary,\n  Loader,\n} from 'src/components'\nimport {useAnimation} from 'src/hooks'\nimport {useAppDispatch, useAppSelector} from 'src/redux/hooks'\nimport {addApp, closeApp, openApp, toggleApp} from 'src/redux/slices/apps'\n\nimport './app.scss'\n\ninterface IApp {\n  name: string\n  icon: React.ReactNode\n  window: React.ReactNode | string\n  defaultPosition: ControlPosition\n}\n\nexport const App: React.FC<IApp> = memo(\n  ({name, icon, window, defaultPosition}) => {\n    const state = useAppSelector(store => store.apps.allApps?.[name])\n    const dispatch = useAppDispatch()\n\n    const setIsOpen = (value: boolean) => {\n      if (value) {\n        dispatch(openApp(name))\n      } else {\n        dispatch(closeApp(name))\n      }\n    }\n\n    const [AnimatedAppWindow, onClickToggleButton] = useAnimation({\n      isOpen: state?.isOpen,\n      setIsOpen: setIsOpen,\n      startClassName: 'app-window-opening',\n      animationDuration: 300,\n      Component: AppWindow,\n    })\n\n    useEffect(() => {\n      dispatch(\n        addApp({\n          name,\n          icon,\n          defaultPosition,\n          position: defaultPosition,\n          isOpen: false,\n          hidden: false,\n        }),\n      )\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const onClickAppIcon = useCallback(() => {\n      if (!state?.isOpen) {\n        onClickToggleButton()\n      }\n      dispatch(openApp(name))\n    }, [dispatch, name, state?.isOpen, onClickToggleButton])\n\n    const onHideAppWindow = useCallback(() => {\n      dispatch(toggleApp(name))\n    }, [dispatch, name])\n\n    return (\n      <>\n        <AppIcon\n          name={state?.name}\n          defaultPosition={defaultPosition}\n          onDoubleClick={onClickAppIcon}>\n          {icon}\n        </AppIcon>\n        <AnimatedAppWindow\n          style={{\n            display: state?.hidden ? 'none' : undefined,\n            visibility: !state?.isOpen ? 'hidden' : undefined,\n          }}\n          onClose={onClickToggleButton}\n          onHide={onHideAppWindow}>\n          <AppWindowErrorBoundary>\n            <Loader>{window}</Loader>\n          </AppWindowErrorBoundary>\n        </AnimatedAppWindow>\n      </>\n    )\n  },\n)\n","import React from 'react'\nimport {App} from 'src/containers/App'\nimport {BookTwoTone} from '@ant-design/icons'\n\nconst ResumeAppContent = React.lazy(() => import('./content'))\n\nexport const ResumeApp: React.FC = () => {\n  return (\n    <App\n      name=\"Resume\"\n      icon={<BookTwoTone style={{fontSize: '30px'}} />}\n      window={<ResumeAppContent />}\n      defaultPosition={{x: 10, y: 80}}\n    />\n  )\n}\n","import React from 'react'\nimport {App} from 'src/containers/App'\nimport {CodeTwoTone} from '@ant-design/icons'\n\nconst SkillsAppContent = React.lazy(() => import('./content'))\n\nexport const SkillsApp: React.FC = () => {\n  return (\n    <App\n      name=\"Skills\"\n      icon={<CodeTwoTone style={{fontSize: '30px'}} />}\n      window={<SkillsAppContent />}\n      defaultPosition={{x: 10, y: 160}}\n    />\n  )\n}\n","import React from 'react'\n\nimport {App} from 'src/containers/App'\nimport {FilePptTwoTone} from '@ant-design/icons'\n\nconst PortfolioAppContent = React.lazy(() => import('./content'))\n\nexport const PortfolioApp: React.FC = () => {\n  return (\n    <App\n      name=\"Portfolio\"\n      icon={<FilePptTwoTone style={{fontSize: '30px'}} />}\n      window={<PortfolioAppContent />}\n      defaultPosition={{x: 10, y: 0}}\n    />\n  )\n}\n","import React from 'react'\nimport {App} from 'src/containers/App'\nimport {QuestionCircleTwoTone} from '@ant-design/icons'\n\nconst HelpAppContent = React.lazy(() => import('./content'))\n\nexport const HelpApp: React.FC = () => {\n  return (\n    <App\n      name=\"Help\"\n      icon={<QuestionCircleTwoTone style={{fontSize: '30px'}} />}\n      window={<HelpAppContent />}\n      defaultPosition={{x: 10, y: 300}}\n    />\n  )\n}\n","import React from 'react'\n\nimport {Desktop} from './DesktopContainer'\nimport {ResumeApp} from 'src/apps/Resume'\nimport {SkillsApp} from 'src/apps/Skills'\nimport {PortfolioApp} from 'src/apps/Portfolio'\nimport {HelpApp} from 'src/apps/Help'\n\nexport const Main: React.FC = () => {\n  return (\n    <section>\n      <Desktop>\n        <HelpApp />\n        <PortfolioApp />\n        <ResumeApp />\n        <SkillsApp />\n      </Desktop>\n    </section>\n  )\n}\n","import ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\n\nimport {store} from 'src/redux/store'\nimport {Main} from './containers/Main'\n\nimport './index.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}